{"version":3,"sources":["webpack:///./src/api/todo_all.js","webpack:///./src/api/users.js","webpack:///./src/components/CreateTodo.vue","webpack:///./src/components/CreateTodo.vue?8445","webpack:///./src/api/projects.js"],"names":["headers","localStorage","getItem","TodoApi","create","config","HTTP","post","then","response","data","catch","error","console","log","delete","id","list","get","results","UserApi","user","for","class","type","value","createTodo","text_todo","placeholder","users","key","project","projects","isActive","methods","text","this","parseInt","render","ProjectApi"],"mappings":"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","file":"js/chunk-178e36a0.aeb23650.js","sourcesContent":["import { HTTP } from './common'\n\nlet headers = {\n  'Content-Type': 'application/json',\n  'Authorization': 'Token ' + localStorage.getItem('token')\n}\n\nexport const TodoApi = {\n  create (config) {\n    return HTTP.post('/api/v1/todo-all/todo/', config, {headers})\n      .then(response => response.data)\n      .catch(error => console.log(error.response));\n  },\n  delete (id) {\n    return HTTP.delete(`/api/v1/todo-all/todo/${id}`, {headers})\n  },\n  list () {\n    return HTTP.get('/api/v1/todo-all/todo/')\n      .then((response) => (response.data.results))\n      .catch((error) => console.log(error));\n  }\n}","import { HTTP } from './common'\n\nexport const UserApi = {\n  create (config) {\n    return HTTP.post('/api/v1/users/user/', config)\n      .then(response => response.data)\n      .catch(error => console.log(error.response));\n  },\n  delete (user) {\n    return HTTP.delete(`/api/v1/users/user/${user.id}/`)\n  },\n  list () {\n    return HTTP.get('/api/v1/users/user/')\n      .then((response) => (response.data.results))\n      .catch((error) => console.log(error));\n  }\n}","<template lang=\"ru\">\r\n<form class=\"todo-create-form\" @submit.prevent=\"createTodo\">\r\n    <h3>Создать To-Do</h3>\r\n    <label for=\"text_todo\">Текст:</label>      \r\n    <textarea id=\"text_todo\" v-model=\"text_todo\" placeholder=\"Текст заметки...\"></textarea>\r\n\r\n    <label for=\"user\">Пользователь:</label>\r\n    <select id=\"user\" v-model=\"user\">\r\n      <option v-for=\"user in users\" v-bind:key=\"user.id\">\r\n          {{ user.id}}\r\n        </option>\r\n    </select>\r\n\r\n    <label for=\"project\">Проект:</label>\r\n    <select id=\"project\" v-model=\"project\">\r\n      <option v-for=\"project in projects\" v-bind:key=\"project.id\">\r\n          {{ project.id}} \r\n      </option>\r\n    </select>\r\n\r\n    <input type=\"checkbox\" id=\"checkbox\" v-model=\"isActive\" />\r\n\r\n    <input class=\"button\" type=\"submit\" value=\"Создать\">  \r\n</form>\r\n</template>\r\n\r\n<script>\r\nimport { ProjectApi } from \"../api/projects\";\r\nimport { UserApi } from \"../api/users\";\r\nimport { TodoApi } from \"../api/todo_all\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      project: \"\",\r\n      user: \"\",\r\n      text_todo: \"\",\r\n      users: UserApi.list().then((results) => (this.users = results)),\r\n      projects: ProjectApi.list().then((results) => (this.projects = results)),\r\n      isActive: true\r\n    };\r\n  },\r\n  methods: {\r\n    createTodo() {\r\n      let config = {\r\n        text: this.text_todo,\r\n        user: parseInt(this.user),\r\n        project: parseInt(this.project),\r\n        isActive: this.isActive,\r\n      };\r\n      TodoApi.create(config);\r\n      this.project = [];\r\n      this.user = [];\r\n      this.text_todo = \"\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>","import { render } from \"./CreateTodo.vue?vue&type=template&id=63b49832&lang=ru\"\nimport script from \"./CreateTodo.vue?vue&type=script&lang=js\"\nexport * from \"./CreateTodo.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { HTTP } from './common'\nimport { headers } from './common'\n\n\nexport const ProjectApi = {\n  create (config) {\n    return HTTP.post('/api/v1/projects/project/', config, {headers})\n      .then(response => response.data)\n      .catch(error => console.log(error.response));\n  },\n  delete (id) {\n    return HTTP.delete(`/api/v1/projects/project/${id}/`, {headers})\n  },\n  list () {\n    return HTTP.get('/api/v1/projects/project/')\n      .then((response) => (response.data.results))\n      .catch((error) => console.log(error));\n  }\n}"],"sourceRoot":""}